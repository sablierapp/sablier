// Code generated by MockGen. DO NOT EDIT.
// Source: sablier.go
//
// Generated by this command:
//
//	mockgen -package sabliertest -source=sablier.go -destination=sabliertest/mocks_sablier.go *
//

// Package sabliertest is a generated GoMock package.
package sabliertest

import (
	context "context"
	reflect "reflect"
	time "time"

	sablier "github.com/sablierapp/sablier/pkg/sablier"
	gomock "go.uber.org/mock/gomock"
)

// MockSablier is a mock of Sablier interface.
type MockSablier struct {
	ctrl     *gomock.Controller
	recorder *MockSablierMockRecorder
	isgomock struct{}
}

// MockSablierMockRecorder is the mock recorder for MockSablier.
type MockSablierMockRecorder struct {
	mock *MockSablier
}

// NewMockSablier creates a new mock instance.
func NewMockSablier(ctrl *gomock.Controller) *MockSablier {
	mock := &MockSablier{ctrl: ctrl}
	mock.recorder = &MockSablierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSablier) EXPECT() *MockSablierMockRecorder {
	return m.recorder
}

// RemoveInstance mocks base method.
func (m *MockSablier) RemoveInstance(ctx context.Context, name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveInstance", ctx, name)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveInstance indicates an expected call of RemoveInstance.
func (mr *MockSablierMockRecorder) RemoveInstance(ctx, name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveInstance", reflect.TypeOf((*MockSablier)(nil).RemoveInstance), ctx, name)
}

// RequestReadySession mocks base method.
func (m *MockSablier) RequestReadySession(ctx context.Context, names []string, duration, timeout time.Duration) (*sablier.SessionState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestReadySession", ctx, names, duration, timeout)
	ret0, _ := ret[0].(*sablier.SessionState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestReadySession indicates an expected call of RequestReadySession.
func (mr *MockSablierMockRecorder) RequestReadySession(ctx, names, duration, timeout any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestReadySession", reflect.TypeOf((*MockSablier)(nil).RequestReadySession), ctx, names, duration, timeout)
}

// RequestReadySessionGroup mocks base method.
func (m *MockSablier) RequestReadySessionGroup(ctx context.Context, group string, duration, timeout time.Duration) (*sablier.SessionState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestReadySessionGroup", ctx, group, duration, timeout)
	ret0, _ := ret[0].(*sablier.SessionState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestReadySessionGroup indicates an expected call of RequestReadySessionGroup.
func (mr *MockSablierMockRecorder) RequestReadySessionGroup(ctx, group, duration, timeout any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestReadySessionGroup", reflect.TypeOf((*MockSablier)(nil).RequestReadySessionGroup), ctx, group, duration, timeout)
}

// RequestSession mocks base method.
func (m *MockSablier) RequestSession(ctx context.Context, names []string, duration time.Duration) (*sablier.SessionState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestSession", ctx, names, duration)
	ret0, _ := ret[0].(*sablier.SessionState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestSession indicates an expected call of RequestSession.
func (mr *MockSablierMockRecorder) RequestSession(ctx, names, duration any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestSession", reflect.TypeOf((*MockSablier)(nil).RequestSession), ctx, names, duration)
}

// RequestSessionGroup mocks base method.
func (m *MockSablier) RequestSessionGroup(ctx context.Context, group string, duration time.Duration) (*sablier.SessionState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestSessionGroup", ctx, group, duration)
	ret0, _ := ret[0].(*sablier.SessionState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestSessionGroup indicates an expected call of RequestSessionGroup.
func (mr *MockSablierMockRecorder) RequestSessionGroup(ctx, group, duration any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestSessionGroup", reflect.TypeOf((*MockSablier)(nil).RequestSessionGroup), ctx, group, duration)
}

// SetGroups mocks base method.
func (m *MockSablier) SetGroups(groups map[string][]string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetGroups", groups)
}

// SetGroups indicates an expected call of SetGroups.
func (mr *MockSablierMockRecorder) SetGroups(groups any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetGroups", reflect.TypeOf((*MockSablier)(nil).SetGroups), groups)
}
